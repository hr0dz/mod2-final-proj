class Comment < ApplicationRecord
    belongs_to :note 
    belongs_to :user 
 
    # - user can add a comment on a note 
    # - edit and/or delete 
    # - another join table; note and user 
    # - add a from_for a comment on the notes and business page 
    # - a comment belongs to note and user 

end

class CommentControllers < ApplicationRecord
    def new
        @comment = Comment.new
    end
    
    def create 
        @comment = Comment.create([:message])
    end 

    def edit 
        @student = Student.find(params[:id])
    end

    def update 
    @student = Student.find(params[:id])
    @student.update()
    @redirect_to _path()
    end 

    def destroy 
    @student = Student.find()
    @student.destroy
    redirect_to _path
    end 

end 

class Note < ApplicationRecord
    
    belongs_to :user
    belongs_to :business

    has_many :comments
end

class User < ApplicationRecord
    has_secure_password

    validates :email, presence: true, uniqueness: true
    
    has_many :notes
    has_many :user_neighborhoods
    has_many :neighborhoods, through: :user_neighborhoods
    has_many :businesses, through: :notes
    has_many :comments, through: :notes 
end



-------------------

_form.html.erb , let :new render 

<h1> Make A New Comment </h1>

<%= form_for @comment do |f| %>
    <%= f.label: "Comment =%>
    <%= f.text_field :comment =%>

    <%= f.submit %>
<% end %>

Rails.application.routes.draw do 
  resources :notes, only: [:index, :show, :edit, :update]
  #resources :notes, only: [:index, :show]
  resources :users, only: [:new, :create, :show, :index, :edit, :update]
  resources :neighborhoods, only: [:index, :show]
  resources :businesses, only: [:index, :show]
  resources :comments, only; [:new, :create, :edit, :destroy]
  resources :businesses do
    resources :notes
  end
  get '/businesses/:bussiness_id/notes/new', to: 'notes#new', as: 'new_note'
  post '/businesses/:bussiness_id/notes', to: 'notes#create'
  post '/notes', to: 'notes#create'
  
  get '/login', to: 'sessions#new', as: 'login'
  post '/login', to: 'sessions#create'
end

-------------------------------------------

create table "comments", force: :cascade do |t|
    t.text "message"
    t.integer "note_id"
    t.integer "user_id"

    t.datetime "created_at"
    t.datetime "updated_at"

end

--------------------------------------------